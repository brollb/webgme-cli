# Run these commands with cwd where this file is.
# To build and launch for the first time:
#   $ docker-compose -p <%-appName%> up -d
# Note: -p, --project-name NAME     Specify an alternate project name (default: directory name)
# To rebuild and launch add --build:
#   $ docker-compose -p <%-appName%> up -d --build
# To stop containers:
#  $ docker-compose stop
version: '3'
networks:
  database:
    driver: bridge
  workers:
    internal: true # plugin workers cannot access the host network (nor database)
    driver: bridge
services:
  webgme-server:
    build:
      context: .
    depends_on:
      - mongo
    environment:
      - NODE_ENV=docker
    volumes:
    # The webgme server spawns plugin-workers and need to be able to act as a docker-host.
      - /var/run/docker.sock:/var/run/docker.sock
    ## Uncomment/edit to read token_keys from outside and persist blob-storage on host
    #   - ~/token_keys:/token_keys
    #   - ~/blob-local-storage:/blob-local-storage
    networks:
      - database
      - workers
    ports:
    # Change the LHS to map to other port on host
      - 8080:8888
  mongo:
    image: mongo
    ## Uncomment/modify s.t. database files are persisted on the host!
    # volumes:
    #   - ~/db:/data/db
    ## Uncomment to expose mongo-port on host
    # ports:
    #   - 27017:27017
    networks:
      - database
  plugin-worker:
    build:
      context: .
      dockerfile: DockerfilePluginWorker
    depends_on:
      - webgme-server
    networks:
      - workers
    environment:
      - NODE_ENV=docker
    command: ["cat", "/dev/null"] # A no-op command so the image is built.